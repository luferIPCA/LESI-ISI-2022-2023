//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_Client_WindowsForm.WCF_EXT_2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SumSub", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class SumSub : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SubField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sub {
            get {
                return this.SubField;
            }
            set {
                if ((this.SubField.Equals(value) != true)) {
                    this.SubField = value;
                    this.RaisePropertyChanged("Sub");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sum {
            get {
                return this.SumField;
            }
            set {
                if ((this.SumField.Equals(value) != true)) {
                    this.SumField = value;
                    this.RaisePropertyChanged("Sum");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WCF_EXT_2.ICalcService")]
    public interface ICalcService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/GetData", ReplyAction="http://tempuri.org/ICalcService/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalcService/GetData", ReplyAction="http://tempuri.org/ICalcService/GetDataResponse")]
        System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState);
        
        string EndGetData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ICalcService/GetDataUsingDataContractResponse")]
        WCF_Client_WindowsForm.WCF_EXT_2.CompositeType GetDataUsingDataContract(WCF_Client_WindowsForm.WCF_EXT_2.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalcService/GetDataUsingDataContract", ReplyAction="http://tempuri.org/ICalcService/GetDataUsingDataContractResponse")]
        System.IAsyncResult BeginGetDataUsingDataContract(WCF_Client_WindowsForm.WCF_EXT_2.CompositeType composite, System.AsyncCallback callback, object asyncState);
        
        WCF_Client_WindowsForm.WCF_EXT_2.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/Sum", ReplyAction="http://tempuri.org/ICalcService/SumResponse")]
        int Sum(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalcService/Sum", ReplyAction="http://tempuri.org/ICalcService/SumResponse")]
        System.IAsyncResult BeginSum(int x, int y, System.AsyncCallback callback, object asyncState);
        
        int EndSum(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalcService/SumAndSub", ReplyAction="http://tempuri.org/ICalcService/SumAndSubResponse")]
        WCF_Client_WindowsForm.WCF_EXT_2.SumSub SumAndSub(int x, int y);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/ICalcService/SumAndSub", ReplyAction="http://tempuri.org/ICalcService/SumAndSubResponse")]
        System.IAsyncResult BeginSumAndSub(int x, int y, System.AsyncCallback callback, object asyncState);
        
        WCF_Client_WindowsForm.WCF_EXT_2.SumSub EndSumAndSub(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalcServiceChannel : WCF_Client_WindowsForm.WCF_EXT_2.ICalcService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDataUsingDataContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDataUsingDataContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WCF_Client_WindowsForm.WCF_EXT_2.CompositeType Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WCF_Client_WindowsForm.WCF_EXT_2.CompositeType)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SumAndSubCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SumAndSubCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public WCF_Client_WindowsForm.WCF_EXT_2.SumSub Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((WCF_Client_WindowsForm.WCF_EXT_2.SumSub)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalcServiceClient : System.ServiceModel.ClientBase<WCF_Client_WindowsForm.WCF_EXT_2.ICalcService>, WCF_Client_WindowsForm.WCF_EXT_2.ICalcService {
        
        private BeginOperationDelegate onBeginGetDataDelegate;
        
        private EndOperationDelegate onEndGetDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDataUsingDataContractDelegate;
        
        private EndOperationDelegate onEndGetDataUsingDataContractDelegate;
        
        private System.Threading.SendOrPostCallback onGetDataUsingDataContractCompletedDelegate;
        
        private BeginOperationDelegate onBeginSumDelegate;
        
        private EndOperationDelegate onEndSumDelegate;
        
        private System.Threading.SendOrPostCallback onSumCompletedDelegate;
        
        private BeginOperationDelegate onBeginSumAndSubDelegate;
        
        private EndOperationDelegate onEndSumAndSubDelegate;
        
        private System.Threading.SendOrPostCallback onSumAndSubCompletedDelegate;
        
        public CalcServiceClient() {
        }
        
        public CalcServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CalcServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalcServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CalcServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetDataCompletedEventArgs> GetDataCompleted;
        
        public event System.EventHandler<GetDataUsingDataContractCompletedEventArgs> GetDataUsingDataContractCompleted;
        
        public event System.EventHandler<SumCompletedEventArgs> SumCompleted;
        
        public event System.EventHandler<SumAndSubCompletedEventArgs> SumAndSubCompleted;
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetData(int value, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetData(value, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string EndGetData(System.IAsyncResult result) {
            return base.Channel.EndGetData(result);
        }
        
        private System.IAsyncResult OnBeginGetData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int value = ((int)(inValues[0]));
            return this.BeginGetData(value, callback, asyncState);
        }
        
        private object[] OnEndGetData(System.IAsyncResult result) {
            string retVal = this.EndGetData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataCompleted(object state) {
            if ((this.GetDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataCompleted(this, new GetDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataAsync(int value) {
            this.GetDataAsync(value, null);
        }
        
        public void GetDataAsync(int value, object userState) {
            if ((this.onBeginGetDataDelegate == null)) {
                this.onBeginGetDataDelegate = new BeginOperationDelegate(this.OnBeginGetData);
            }
            if ((this.onEndGetDataDelegate == null)) {
                this.onEndGetDataDelegate = new EndOperationDelegate(this.OnEndGetData);
            }
            if ((this.onGetDataCompletedDelegate == null)) {
                this.onGetDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataDelegate, new object[] {
                        value}, this.onEndGetDataDelegate, this.onGetDataCompletedDelegate, userState);
        }
        
        public WCF_Client_WindowsForm.WCF_EXT_2.CompositeType GetDataUsingDataContract(WCF_Client_WindowsForm.WCF_EXT_2.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDataUsingDataContract(WCF_Client_WindowsForm.WCF_EXT_2.CompositeType composite, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WCF_Client_WindowsForm.WCF_EXT_2.CompositeType EndGetDataUsingDataContract(System.IAsyncResult result) {
            return base.Channel.EndGetDataUsingDataContract(result);
        }
        
        private System.IAsyncResult OnBeginGetDataUsingDataContract(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WCF_Client_WindowsForm.WCF_EXT_2.CompositeType composite = ((WCF_Client_WindowsForm.WCF_EXT_2.CompositeType)(inValues[0]));
            return this.BeginGetDataUsingDataContract(composite, callback, asyncState);
        }
        
        private object[] OnEndGetDataUsingDataContract(System.IAsyncResult result) {
            WCF_Client_WindowsForm.WCF_EXT_2.CompositeType retVal = this.EndGetDataUsingDataContract(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetDataUsingDataContractCompleted(object state) {
            if ((this.GetDataUsingDataContractCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDataUsingDataContractCompleted(this, new GetDataUsingDataContractCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDataUsingDataContractAsync(WCF_Client_WindowsForm.WCF_EXT_2.CompositeType composite) {
            this.GetDataUsingDataContractAsync(composite, null);
        }
        
        public void GetDataUsingDataContractAsync(WCF_Client_WindowsForm.WCF_EXT_2.CompositeType composite, object userState) {
            if ((this.onBeginGetDataUsingDataContractDelegate == null)) {
                this.onBeginGetDataUsingDataContractDelegate = new BeginOperationDelegate(this.OnBeginGetDataUsingDataContract);
            }
            if ((this.onEndGetDataUsingDataContractDelegate == null)) {
                this.onEndGetDataUsingDataContractDelegate = new EndOperationDelegate(this.OnEndGetDataUsingDataContract);
            }
            if ((this.onGetDataUsingDataContractCompletedDelegate == null)) {
                this.onGetDataUsingDataContractCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDataUsingDataContractCompleted);
            }
            base.InvokeAsync(this.onBeginGetDataUsingDataContractDelegate, new object[] {
                        composite}, this.onEndGetDataUsingDataContractDelegate, this.onGetDataUsingDataContractCompletedDelegate, userState);
        }
        
        public int Sum(int x, int y) {
            return base.Channel.Sum(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSum(int x, int y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSum(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndSum(System.IAsyncResult result) {
            return base.Channel.EndSum(result);
        }
        
        private System.IAsyncResult OnBeginSum(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int x = ((int)(inValues[0]));
            int y = ((int)(inValues[1]));
            return this.BeginSum(x, y, callback, asyncState);
        }
        
        private object[] OnEndSum(System.IAsyncResult result) {
            int retVal = this.EndSum(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSumCompleted(object state) {
            if ((this.SumCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SumCompleted(this, new SumCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SumAsync(int x, int y) {
            this.SumAsync(x, y, null);
        }
        
        public void SumAsync(int x, int y, object userState) {
            if ((this.onBeginSumDelegate == null)) {
                this.onBeginSumDelegate = new BeginOperationDelegate(this.OnBeginSum);
            }
            if ((this.onEndSumDelegate == null)) {
                this.onEndSumDelegate = new EndOperationDelegate(this.OnEndSum);
            }
            if ((this.onSumCompletedDelegate == null)) {
                this.onSumCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSumCompleted);
            }
            base.InvokeAsync(this.onBeginSumDelegate, new object[] {
                        x,
                        y}, this.onEndSumDelegate, this.onSumCompletedDelegate, userState);
        }
        
        public WCF_Client_WindowsForm.WCF_EXT_2.SumSub SumAndSub(int x, int y) {
            return base.Channel.SumAndSub(x, y);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSumAndSub(int x, int y, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSumAndSub(x, y, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public WCF_Client_WindowsForm.WCF_EXT_2.SumSub EndSumAndSub(System.IAsyncResult result) {
            return base.Channel.EndSumAndSub(result);
        }
        
        private System.IAsyncResult OnBeginSumAndSub(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int x = ((int)(inValues[0]));
            int y = ((int)(inValues[1]));
            return this.BeginSumAndSub(x, y, callback, asyncState);
        }
        
        private object[] OnEndSumAndSub(System.IAsyncResult result) {
            WCF_Client_WindowsForm.WCF_EXT_2.SumSub retVal = this.EndSumAndSub(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSumAndSubCompleted(object state) {
            if ((this.SumAndSubCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SumAndSubCompleted(this, new SumAndSubCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SumAndSubAsync(int x, int y) {
            this.SumAndSubAsync(x, y, null);
        }
        
        public void SumAndSubAsync(int x, int y, object userState) {
            if ((this.onBeginSumAndSubDelegate == null)) {
                this.onBeginSumAndSubDelegate = new BeginOperationDelegate(this.OnBeginSumAndSub);
            }
            if ((this.onEndSumAndSubDelegate == null)) {
                this.onEndSumAndSubDelegate = new EndOperationDelegate(this.OnEndSumAndSub);
            }
            if ((this.onSumAndSubCompletedDelegate == null)) {
                this.onSumAndSubCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSumAndSubCompleted);
            }
            base.InvokeAsync(this.onBeginSumAndSubDelegate, new object[] {
                        x,
                        y}, this.onEndSumAndSubDelegate, this.onSumAndSubCompletedDelegate, userState);
        }
    }
}
